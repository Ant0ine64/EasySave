name: Publish and release

on:
  push:
    branches: [ master, github-actions ]
    tags:
      - v*

jobs:
  build-and-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      continue-on-error: true
    - run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish linux64
      run: dotnet publish EasySaveUI/EasySaveUI.csproj -c Release -f netcoreapp3.1 -r linux-x64 -p:PublishSingleFile=true
    - name: Give a diferent name to linux elf executable
      run: mv EasySaveUI/bin/Release/netcoreapp3.1/linux-x64/publish/EasySaveUI EasySaveUI/bin/Release/netcoreapp3.1/linux-x64/publish/EasySaveUI.elf
      
    - name: Publish win64
      run: dotnet publish EasySaveUI/EasySaveUI.csproj -c Release -f netcoreapp3.1 -r win-x64 -p:PublishSingleFile=true    
    
    - name: Upload a Build Artifact linux
      uses: actions/upload-artifact@v2.3.1
      with:
        name: EasySaveUi_linux-x64
        path: EasySaveUI/bin/Release/netcoreapp3.1/linux-x64/publish/
    - name: Upload a Build Artifact windows
      uses: actions/upload-artifact@v2.3.1
      with:
        name: EasySaveUi_win-x64
        path: EasySaveUI/bin/Release/netcoreapp3.1/win-x64/publish/
          
  cryptosoft-publication:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore CryptoFile/CryptoFile.csproj
    - name: Build
      run: dotnet build --no-restore CryptoFile/CryptoFile.csproj
    - name: Publish crytosoft linux64
      run: dotnet publish CryptoFile/CryptoFile.csproj --self-contained true -r linux-x64 -p:PublishSingleFile=true -c Release
    - name: Publish crytosoft win64
      run: dotnet publish CryptoFile/CryptoFile.csproj --self-contained true -r win-x64 -p:PublishSingleFile=true -c Release
    - name: Upload a Build Artifact linux
      uses: actions/upload-artifact@v2.3.1
      with:
        name: CryptoSoft_linux-x64
        path: CryptoFile/bin/Release/netcoreapp3.1/linux-x64/publish/
    - name: Upload a Build Artifact windows
      uses: actions/upload-artifact@v2.3.1
      with:
        name: CryptoSoft_win-x64
        path: CryptoFile/bin/Release/netcoreapp3.1/win-x64/publish/
          
  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: 
      - build-and-publish
      - cryptosoft-publication
        
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md
      - name: Get artifact linux
        uses: actions/download-artifact@v2
        with:
          name: EasySaveUi_linux-x64
      - name: Get artifact win
        uses: actions/download-artifact@v2
        with:
          name: EasySaveUi_win-x64
      - name: Upload Release Asset linux
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: EasySaveConsole.elf
          asset_name: hello-wolrd_linux-x64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Windows 
        id: upload-release-asset-win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: EasySaveConsole.exe
          asset_name: hello-world_win-x64.exe
          asset_content_type: application/octet-stream

      # Upload Cryptosoft artifacts
      - name: Get Cryptosoft artifact linux
        uses: actions/download-artifact@v2
        with:
          name: CryptoSoft_linux-x64
      - name: Get Cryptosoft artifact win
        uses: actions/download-artifact@v2
        with:
          name: CryptoSoft_win-x64
      - name: Upload Release Asset linux
        id: upload-release-asset-cryptosoft-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CryptoSoft
          asset_name: CryptoSoft_linux-x64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Windows
        id: upload-release-asset-cryptosoft-win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CryptoSoft.exe
          asset_name: CryptoSoft_win-x64.exe
          asset_content_type: application/octet-stream
